server {
    listen 80;
    server_name localhost;
    root /var/www/public;
    index index.php index.html index.htm;

    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # ✅ CORRECTION CRITIQUE : Permettre l'accès aux fichiers storage
    # Cette règle doit être AVANT le blocage général de /storage/
    location /storage/ {
        alias /var/www/storage/app/public/;
        try_files $uri $uri/ =404;
        
        # Headers CORS pour les fichiers média
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        
        # Types MIME pour fichiers audio/vidéo
        types {
            audio/mpeg mp3;
            audio/mp4 m4a;
            audio/ogg ogg;
            audio/wav wav;
            video/mp4 mp4;
            image/jpeg jpg jpeg;
            image/png png;
            image/gif gif;
        }
        
        # Cache contrôlé pour les fichiers média
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
        
        # Permettre le Range Request pour les fichiers audio/vidéo
        add_header Accept-Ranges bytes;
    }

    # Gestion des fichiers statiques (images, CSS, JS)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Route principale
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Traitement des fichiers PHP
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        # Timeouts pour les requêtes longues (IA, uploads)
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        
        # Buffers pour les grosses réponses
        fastcgi_buffer_size 32k;
        fastcgi_buffers 8 32k;
        fastcgi_busy_buffers_size 64k;
    }

    # Blocage des fichiers cachés (.git, .env, etc.)
    location ~ /\. {
        deny all;
    }

    # ✅ COMMENTÉ : Ne plus bloquer /storage/ car géré par la règle spécifique ci-dessus
    # location ~ ^/(storage|bootstrap/cache)/ {
    #     deny all;
    # }

    # Bloquer uniquement bootstrap/cache et autres dossiers sensibles
    location ~ ^/(bootstrap/cache|vendor|tests|database)/ {
        deny all;
    }

    # Gestion des erreurs
    error_page 404 /index.php;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/public;
    }

    # Configuration de sécurité
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

    # Client max body size (pour les uploads d'images et audio)
    client_max_body_size 100M;
    
    # Timeout pour les clients (lecture audio/vidéo)
    client_body_timeout 300s;
    send_timeout 300s;
}