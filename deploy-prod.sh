#!/bin/bash

echo "üöÄ D√©ploiement SmartHealth Production"

# Variables d'environnement
export DOCKERHUB_USERNAME="your_dockerhub_username"
export DB_DATABASE="SmartHealth"
export DB_USERNAME="smarthealth"
export DB_PASSWORD="smarthealth_password"
export DB_ROOT_PASSWORD="root_password"

# Pull des derni√®res images
echo "üì• Pull des images Docker..."
docker-compose -f docker-compose.prod.yml pull

# Arr√™t des anciens conteneurs
echo "üõë Arr√™t des anciens conteneurs..."
docker-compose -f docker-compose.prod.yml down

# D√©marrage des nouveaux conteneurs
echo "‚ñ∂Ô∏è D√©marrage des conteneurs..."
docker-compose -f docker-compose.prod.yml up -d

# Attendre que les services soient pr√™ts
echo "‚è≥ Attente des services..."
sleep 30

# Ex√©cution des migrations
echo "üóÑÔ∏è Migrations de base de donn√©es..."
docker-compose -f docker-compose.prod.yml exec app php artisan migrate --force

# Configuration du cache
echo "‚ö° Configuration du cache..."
docker-compose -f docker-compose.prod.yml exec app php artisan config:cache
docker-compose -f docker-compose.prod.yml exec app php artisan route:cache
docker-compose -f docker-compose.prod.yml exec app php artisan view:cache

echo "‚úÖ D√©ploiement termin√© avec succ√®s!"


echo "üöÄ D√©ploiement SmartHealth Production"

# Variables d'environnement
export DOCKERHUB_USERNAME="your_dockerhub_username"
export DB_DATABASE="SmartHealth"
export DB_USERNAME="smarthealth"
export DB_PASSWORD="smarthealth_password"
export DB_ROOT_PASSWORD="root_password"

# ‚úÖ AJOUT: Analyse SonarQube avant d√©ploiement
echo "üîç Analyse de qualit√© du code avec SonarQube..."
if command -v sonar-scanner &> /dev/null; then
    sonar-scanner \
        -Dsonar.projectKey=Farah.hmida_SmartHealth_Laravel \
        -Dsonar.organization=farah-hmida \
        -Dsonar.sources=app,resources,routes,config,AI_farah,AIsalma,IABaha \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=$SONAR_TOKEN
else
    echo "‚ö†Ô∏è SonarQube Scanner non install√©, analyse ignor√©e"
fi

# Pull des derni√®res images
echo "üì• Pull des images Docker..."
docker-compose -f docker-compose.prod.yml pull

# Arr√™t des anciens conteneurs
echo "üõë Arr√™t des anciens conteneurs..."
docker-compose -f docker-compose.prod.yml down

# Tests avant d√©ploiement
echo "üß™ Ex√©cution des tests..."
docker-compose -f docker-compose.prod.yml run --rm app php artisan test

# D√©marrage des nouveaux conteneurs
echo "‚ñ∂Ô∏è D√©marrage des conteneurs..."
docker-compose -f docker-compose.prod.yml up -d

# Attendre que les services soient pr√™ts
echo "‚è≥ Attente des services..."
sleep 30

# Ex√©cution des migrations
echo "üóÑÔ∏è Migrations de base de donn√©es..."
docker-compose -f docker-compose.prod.yml exec app php artisan migrate --force

# Configuration du cache
echo "‚ö° Configuration du cache..."
docker-compose -f docker-compose.prod.yml exec app php artisan config:cache
docker-compose -f docker-compose.prod.yml exec app php artisan route:cache
docker-compose -f docker-compose.prod.yml exec app php artisan view:cache

# ‚úÖ AJOUT: V√©rification post-d√©ploiement
echo "ü©∫ V√©rification des services..."
curl -f http://localhost/health || echo "‚ö†Ô∏è Service principal non disponible"
curl -f http://localhost:5001/health || echo "‚ö†Ô∏è AI Farah non disponible"
curl -f http://localhost:5002/health || echo "‚ö†Ô∏è AI Salma non disponible"
curl -f http://localhost:5003/health || echo "‚ö†Ô∏è AI Baha non disponible"

echo "‚úÖ D√©ploiement termin√© avec succ√®s!"
echo "üìä Consultez SonarQube: https://sonarcloud.io/project/overview?id=Farah.hmida_SmartHealth_Laravel"